(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const s of i.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function o(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(t){if(t.ep)return;t.ep=!0;const i=o(t);fetch(t.href,i)}})();const c=[{type:"heading",title:"Community & Social",description:"Connect with neighbors and stay informed about community events"},{type:"link",title:"Facebook Community",url:"https://www.facebook.com/share/g/14MvzNQsSXP/?mibextid=wwXIfr",icon:"💬"},{type:"heading",title:"Safety & Infrastructure",description:"Report issues with safety and infrastructure"},{type:"link",title:"RVA 311",url:"https://www.rva311.com/",description:"You can also call 3-1-1.",icon:"🚨"},{type:"link",title:"Richmond's Guide to Being a Good Neighbor",url:"https://www.rva.gov/sites/default/files/2021-06/Richmond%27s%20Guide%20to%20Being%20a%20Good%20Neighbor%20-%20Web%20Copy.pdf",description:"A resource guide",icon:"❤️"},{type:"heading",title:"City Council",description:"Stay connected with local government and representation"},{type:"link",title:"4th District Councilperson Sarah Abubaker",url:"https://sarahabubaker.com/",icon:"👩‍💼"},{type:"link",title:"Sarah Abubaker's Newsletter",url:"https://lp.constantcontactpages.com/sl/eFSdMIF/Fourth",icon:"💌"}];function a(){const r=document.getElementById("links-container");if(!r){console.error("Links container not found");return}r.innerHTML="",c.forEach((e,o)=>{if(!e.type){console.warn(`Item at index ${o} missing type property:`,e);return}if(e.type==="heading"){const n=document.createElement("h3");if(n.className="section-heading",n.id=`section-${o}`,n.textContent=e.title||"Untitled Section",r.appendChild(n),e.description){const t=document.createElement("p");t.className="section-description",t.setAttribute("aria-describedby",`section-${o}`),t.textContent=e.description,r.appendChild(t)}}else if(e.type==="link"){if(!e.url){console.warn(`Link at index ${o} missing URL:`,e);return}const n=document.createElement("a");n.className="link-item",n.href=e.url,n.target="_blank",n.rel="noopener noreferrer",n.setAttribute("aria-label",`${e.title||"Untitled Link"}${e.description?": "+e.description:""} (opens in new tab)`);const t=`
        <div class="link-content">
          <div class="link-header">
            <span class="link-title"><span class="link-icon" aria-hidden="true">${e.icon||"🔗"}</span> ${e.title||"Untitled Link"}</span>
          </div>
          ${e.description?`<div class="link-description">${e.description}</div>`:""}
        </div>
      `;n.innerHTML=t,r.appendChild(n)}else console.warn(`Unknown item type "${e.type}" at index ${o}:`,e)})}function l(){try{a()}catch(r){console.error("Error rendering links:",r)}}document.addEventListener("DOMContentLoaded",l);
